{"version":3,"sources":["../../moh.js/handsontable/formula-editor.js"],"names":["TextEditor","Handsontable","editors","FormulaEditor","prototype","extend","prepare","row","col","prop","td","originalValue","cellProperties","rawValue","hasOwnProperty","type","apply","formula","getValue","TEXTAREA","value","setValue","newValue","saveValue","ctrlDown","undefined","length","charAt","console","log","slice","calculated","parser","parse","error","result","instance","setDataAtCell"],"mappings":"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","sourcesContent":["/**\r\n * FormulaEditor for handsonTable\r\n * Authon: Lester Lyu\r\n *\r\n * For object like:\r\n * {\r\n *     formula: '...',\r\n *     result: '...'\r\n * } OR\r\n *  string\r\n */\r\n\r\n// shorten the names\r\nvar TextEditor = Handsontable.editors.TextEditor;\r\n\r\n\r\n// FormulaEditor is a class function, inheriting form TextEditor\r\nvar FormulaEditor = TextEditor.prototype.extend();\r\n\r\n\r\nFormulaEditor.prototype.prepare = function (row, col, prop, td, originalValue, cellProperties) {\r\n    this.rawValue = {};\r\n    // set editor type\r\n    if (originalValue !== null && originalValue.hasOwnProperty('formula')) {\r\n        this.type = 'formula';\r\n        TextEditor.prototype.prepare.apply(this, [row, col, prop, td, originalValue.formula, cellProperties]);\r\n    }\r\n    else if (originalValue !== null && typeof originalValue === 'string') {\r\n        this.type = 'text';\r\n        TextEditor.prototype.prepare.apply(this, [row, col, prop, td, originalValue, cellProperties]);\r\n    }\r\n    else {\r\n        TextEditor.prototype.prepare.apply(this, [row, col, prop, td, originalValue, cellProperties]);\r\n    }\r\n};\r\n\r\n\r\nFormulaEditor.prototype.getValue = function () {\r\n    return this.TEXTAREA.value;\r\n};\r\n\r\n\r\nFormulaEditor.prototype.setValue = function (newValue) {\r\n    if (this.type === 'formula') {\r\n        this.TEXTAREA.value = '=' + newValue;\r\n    }\r\n    else if (this.type === 'text') {\r\n        this.TEXTAREA.value = newValue;\r\n    }\r\n};\r\n\r\n\r\nFormulaEditor.prototype.saveValue = function (value, ctrlDown) {\r\n    // check if it is formula now\r\n    if (value[0][0] !== undefined && value[0][0].length > 0 && value[0][0].charAt(0) === '=') {\r\n        this.type = 'formula';\r\n        console.log('formula')\r\n    }\r\n    else {\r\n        this.type = 'text';\r\n    }\r\n\r\n    if (this.type === 'text') {\r\n        return TextEditor.prototype.saveValue.apply(this, [value, ctrlDown]);\r\n    }\r\n    else if (this.type === 'formula') {\r\n        this.rawValue.formula = value[0][0].slice(1);\r\n        // re-evaluate the result\r\n        console.log(value[0][0]);\r\n        var calculated = parser.parse(this.rawValue.formula);\r\n        if (calculated.error) {\r\n            this.rawValue.result = calculated;\r\n        }\r\n        else {\r\n            this.rawValue.result = calculated.result;\r\n        }\r\n        console.log(this.rawValue)\r\n        this.instance.setDataAtCell(this.row, this.col, this.rawValue);\r\n    }\r\n};\r\n"],"file":"formula-editor.js"}